<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Xover</title>
    <link>https://originx-23.github.io/post/</link>
    <description>Recent content in Posts on Xover</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-ch</language>
    <copyright>© 2020. Theme by &lt;a href=&#34;https://github.com/MeiK2333/github-style&#34;&gt;&lt;span&gt;github-style&lt;/span&gt;&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 20 Mar 2020 17:41:16 +0800</lastBuildDate>
    
	<atom:link href="https://originx-23.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go基础</title>
      <link>https://originx-23.github.io/post/go%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 20 Mar 2020 17:41:16 +0800</pubDate>
      
      <guid>https://originx-23.github.io/post/go%E5%9F%BA%E7%A1%80/</guid>
      <description>Go基础   := 自动推导类型, 只能在第一次 生成时候使用
  Println 自动加换行符 Printf 格式化输出
      支持多重赋值写法 i, j := 20, 30 i, j = j, i
  _ 匿名变量, 丢弃数据不处理
  变量: 程序运行期间, 可以改变的量, 变量声明需要var var	(多个变量的声明) 常量: 程序运行期间, 不可以改变的量, 常量声明需要const const (多个常量的声明)
  iota:
 iota 常量自动生成器, 每个一行, 自动累加1 iota 给常量赋值使用 iota遇到const, 重置为0 一个const里面,可以只写一个iota, 下面省略 同一行的iota, 值都一样    数据类型
  布尔类型 默认值false</description>
    </item>
    
    <item>
      <title>Hadoop详解</title>
      <link>https://originx-23.github.io/post/hadoop/</link>
      <pubDate>Fri, 20 Mar 2020 17:41:16 +0800</pubDate>
      
      <guid>https://originx-23.github.io/post/hadoop/</guid>
      <description>定义 狭义 HDFS:	分布式文件系统, 解决海量数据存储
YARN: 作业调度和集群资源管理框架, 解决资源任务调度
MAPREDUCE: 分布式运算编程框架, 解决海量数据计算
广义 生态圈
发展 谷歌的三篇论文:
 谷歌分布式文件系统(GFS) 谷歌版的MAPREDUCE系统 bigtable  特性优点 扩容能力
成本低
高效率
可靠性
集群搭建 集群简介(物理上分离, 逻辑上在一起) HDFS: NameNode, DataNode, SecondaryNameNode
YARN: ResourcManager, NodeManager
MapReduce: 分布式运算框架, 打包运行在HDFS集群上.
部署方式 Standalone mode	独立模式
Pseudo-Distributed mode	伪分布式
Cluster mode	集群模式
前两种都是在单机上部署.
服务器系统设置 同步时间 yum install ntpdatentpdate cn.pool.ntp.org设置主机名 vi /etc/sysconfig/networkNETWORKING=yesHOSTNAME=node-1配置IP,主机名映射 vi /etc/hosts192.168.33.101	node-1192.168.33.102	node-2192.168.33.103	node-3配置ssh免密登录 # 生成ssh免登陆密钥ssh-keygen -t rsa	(四个回车)将生成的id_rsa.</description>
    </item>
    
    <item>
      <title>keystone详解</title>
      <link>https://originx-23.github.io/post/keystone%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 20 Mar 2020 17:41:16 +0800</pubDate>
      
      <guid>https://originx-23.github.io/post/keystone%E8%AF%A6%E8%A7%A3/</guid>
      <description>keystone详解 keystone架构 基本概念 　官方介绍
　1.User：has account credentials, is associated with one or more projects or domains
　user是账户凭证，是与一个或多个项目或相关的域
　2.Group: a collection of users, is associated with one or more projects or domains
　group就是用户的一个集合，与一个或多个项目或相关的域
　3.Project(Tenant)： unit of ownership in OpenStack, contains one or more users
　project(tenant)是一个单位，指在openstack中可用的资源，它包含一个或多个用户
　4.Domain：unit of ownership in OpenStack, contains users, groups and projects
　domain是一个单位，它包含用户、组和项目
　5.Role：a first-class piece of metadata associated with many user-project pairs</description>
    </item>
    
    <item>
      <title>Openstack Attach Volume Flow</title>
      <link>https://originx-23.github.io/post/openstack-attach-volume-flow/</link>
      <pubDate>Thu, 19 Mar 2020 11:41:16 +0800</pubDate>
      
      <guid>https://originx-23.github.io/post/openstack-attach-volume-flow/</guid>
      <description>Openstack attach volume flow Nova服务 Nova组件为OpenStack提供计算服务(Compute as Service)，类似AWS的EC2服务。Nova管理的主要对象为云主机（server)，用户可通过Nova API申请云主机(server)资源。云主机通常对应一个虚拟机，但不是绝对，也有可能是一个容器(docker driver)或者裸机(对接ironic driver)。
Cinder服务 Cinder组件为OpenStack提供块存储服务(Block Storage as Service)，类似AWS的EBS服务。Cinder管理的主要对象为数据卷(volume)，用户通过Cinder API可以对volume执行创建、删除、扩容、快照、备份等操作。
Cinder目前最典型的应用场景就是为Nova云主机提供云硬盘功能，用户可以把一个volume卷挂载到Nova的云主机中，当作云主机的一个虚拟块设备使用。
Cinder除了能够为Nova云主机提供云硬盘功能，还能为裸机、容器等提供数据卷功能。
如何挂载块设备到虚拟机 iSCSI设备需要先把lun设备映射到宿主机本地，然后当做本地设备挂载即可。 会创建一个xml文件，例如：
&amp;lt;disk type=&amp;#39;block&amp;#39; device=&amp;#39;disk&amp;#39;&amp;gt; &amp;lt;driver name=&amp;#39;qemu&amp;#39; type=&amp;#39;raw&amp;#39; cache=&amp;#39;none&amp;#39; io=&amp;#39;native&amp;#39;/&amp;gt; &amp;lt;source dev=&amp;#39;/dev/disk/by-path/ip-10.0.0.2:3260-iscsi-iqn.2010-10.org.openstack:volume-2ed1b04c-b34f-437d-9aa3-3feeb683d063-lun-0&amp;#39;/&amp;gt; &amp;lt;target dev=&amp;#39;vdb&amp;#39; bus=&amp;#39;virtio&amp;#39;/&amp;gt; &amp;lt;serial&amp;gt;2ed1b04c-b34f-437d-9aa3-3feeb683d063&amp;lt;/serial&amp;gt; &amp;lt;address type=&amp;#39;pci&amp;#39; domain=&amp;#39;0x0000&amp;#39; bus=&amp;#39;0x00&amp;#39; slot=&amp;#39;0x06&amp;#39; function=&amp;#39;0x0&amp;#39;/&amp;gt; &amp;lt;/disk&amp;gt; 其中 source就是lun设备映射到本地的路径。
如果是分布式存储，以Ceph rbd为例，可以直接挂载rbd image（宿主机需要包含rbd内核模块），通过rbd协议访问image，而不需要先map到宿主机本地，一个demo xml文件为:
&amp;lt;disk type=&amp;#39;network&amp;#39; device=&amp;#39;disk&amp;#39;&amp;gt; &amp;lt;driver name=&amp;#39;qemu&amp;#39; type=&amp;#39;raw&amp;#39; cache=&amp;#39;writeback&amp;#39;/&amp;gt; &amp;lt;auth username=&amp;#39;admin&amp;#39;&amp;gt; &amp;lt;secret type=&amp;#39;ceph&amp;#39; uuid=&amp;#39;bdf77f5d-bf0b-1053-5f56-cd76b32520dc&amp;#39;/&amp;gt; &amp;lt;/auth&amp;gt; &amp;lt;source protocol=&amp;#39;rbd&amp;#39; name=&amp;#39;nova-pool/962b8560-95c3-4d2d-a77d-e91c44536759_disk&amp;#39;&amp;gt; &amp;lt;host name=&amp;#39;10.0.0.2&amp;#39; port=&amp;#39;6789&amp;#39;/&amp;gt; &amp;lt;host name=&amp;#39;10.0.0.3&amp;#39; port=&amp;#39;6789&amp;#39;/&amp;gt; &amp;lt;host name=&amp;#39;10.</description>
    </item>
    
  </channel>
</rss>